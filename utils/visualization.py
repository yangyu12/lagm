import numpy as np

#----------------------------------------------------------------------------

def get_palette(name='pascal'):
    if name == 'pascal':
        return pascal_voc_palette()
    elif name == 'cat':
        cat_palette = [
            255, 255, 255,
            220, 220, 0,
            190, 153, 153,
            250, 170, 30,
            220, 220, 0,
            107, 142, 35,
            102, 102, 156,
            152, 251, 152,
            119, 11, 32,
            244, 35, 232,
            220, 20, 60,
            52, 83, 84,
            194, 87, 125,
            225, 96, 18,
            31, 102, 211,
            104, 131, 101
        ]
        return cat_palette
    elif name == 'face':
        face_palette = [1.0000, 1.0000, 1.0000,
                        0.4420, 0.5100, 0.4234,
                        0.8562, 0.9537, 0.3188,
                        0.2405, 0.4699, 0.9918,
                        0.8434, 0.9329, 0.7544,
                        0.3748, 0.7917, 0.3256,
                        0.0190, 0.4943, 0.3782,
                        0.7461, 0.0137, 0.5684,
                        0.1644, 0.2402, 0.7324,
                        0.0200, 0.4379, 0.4100,
                        0.5853, 0.8880, 0.6137,
                        0.7991, 0.9132, 0.9720,
                        0.6816, 0.6237, 0.8562,
                        0.9981, 0.4692, 0.3849,
                        0.5351, 0.8242, 0.2731,
                        0.1747, 0.3626, 0.8345,
                        0.5323, 0.6668, 0.4922,
                        0.2122, 0.3483, 0.4707,
                        0.6844, 0.1238, 0.1452,
                        0.3882, 0.4664, 0.1003,
                        0.2296, 0.0401, 0.3030,
                        0.5751, 0.5467, 0.9835,
                        0.1308, 0.9628, 0.0777,
                        0.2849, 0.1846, 0.2625,
                        0.9764, 0.9420, 0.6628,
                        0.3893, 0.4456, 0.6433,
                        0.8705, 0.3957, 0.0963,
                        0.6117, 0.9702, 0.0247,
                        0.3668, 0.6694, 0.3117,
                        0.6451, 0.7302, 0.9542,
                        0.6171, 0.1097, 0.9053,
                        0.3377, 0.4950, 0.7284,
                        0.1655, 0.9254, 0.6557,
                        0.9450, 0.6721, 0.6162]
        face_palette = [int(item * 255) for item in face_palette]
        return face_palette
    elif name == 'car':
        car_20_palette = [255, 255, 255,  # 0 background
                          238, 229, 102,  # 1 back_bumper
                          0, 0, 0,  # 2 bumper
                          124, 99, 34,  # 3 car
                          193, 127, 15,  # 4 car_lights
                          248, 213, 42,  # 5 door
                          220, 147, 77,  # 6 fender
                          99, 83, 3,  # 7 grilles
                          116, 116, 138,  # 8 handles
                          200, 226, 37,  # 9 hoods
                          225, 184, 161,  # 10 licensePlate
                          142, 172, 248,  # 11 mirror
                          153, 112, 146,  # 12 roof
                          38, 112, 254,  # 13 running_boards
                          229, 30, 141,  # 14 tailLight
                          52, 83, 84,  # 15 tire
                          194, 87, 125,  # 16 trunk_lids
                          225, 96, 18,  # 17 wheelhub
                          31, 102, 211,  # 18 window
                          104, 131, 101  # 19 windshield
                          ]
        return car_20_palette
    elif name == 'cgpart':
        return [255, 255, 255,  # 0 background
                238, 229, 102,  # 1 back_bumper
                124, 99, 34,  # 3 car
                193, 127, 15,  # 4 car_lights
                248, 213, 42,  # 5 door
                220, 147, 77,  # 6 fender
                99, 83, 3,  # 7 grilles
                116, 116, 138,  # 8 handles
                200, 226, 37,  # 9 hoods
              225, 184, 161,  # 10 licensePlate
              142, 172, 248,  # 11 mirror
              153, 112, 146,  # 12 roof
              38, 112, 254,  # 13 running_boards
              229, 30, 141,  # 14 tailLight
              52, 83, 84,  # 15 tire
              194, 87, 125,  # 16 trunk_lids
              225, 96, 18,  # 17 wheelhub
              31, 102, 211,  # 18 window
              104, 131, 101,  # 19 windshield
                0, 0, 0,  # 2 bumper
                ]


#----------------------------------------------------------------------------

def pascal_voc_palette(
    n = 256,  # The number of total entries
):
    # Construct color map. Reference: https://gist.github.com/wllhf/a4533e0adebe57e3ed06d4b50c8419ae
    cmap = np.zeros((n, 3), dtype=np.uint8)

    def bitget(byteval, idx):
        return ((byteval & (1 << idx)) != 0)

    for i in range(n):
        r = g = b = 0
        c = i
        for j in range(8):
            r = r | (bitget(c, 0) << 7 - j)
            g = g | (bitget(c, 1) << 7 - j)
            b = b | (bitget(c, 2) << 7 - j)
            c = c >> 3
        cmap[i] = np.array([r, g, b])
    return cmap

#----------------------------------------------------------------------------

